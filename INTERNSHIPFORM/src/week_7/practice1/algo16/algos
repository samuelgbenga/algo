Below are some algorithm questions for our study.


Given an integer array nums, return true if any value appears at least twice in the array,
and return false if every element is distinct.

Example 1:
Input: nums = [1,2,3,1]
Output: true

Example 2:
Input: nums = [1,2,3,4]
Output: false

Example 3:
Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true



2.
Given a string s, find the length of the longest
              substring without repeating characters.
       Example 1:
    Input: s = "abcabcbb"
    Output: 3
    Explanation: The answer is "abc", with the length of 3.

     Example 2:
    Input: s = "bbbbb"
    Output: 1
    Explanation: The answer is "b", with the length of 1.

    Example 3:
    Input: s = "pwwkew"
    Output: 3
    Explanation: The answer is "wke", with the length of 3.
    Notice that the answer must be a substring, "pwke" is a subsequence      and not a substring.



3. Given a string, s, we define a substring, s', of s to be a string
that occurs in s (i.e., a string matching some contiguous block of characters in s).
Complete the count_binary_substrings function. It has one parameter: a string, s,
 consisting of only 0s and 1s. The function must return an integer denoting the total number of
  substrings of s satisfying both of the following two conditions:
The 0s and 1s are grouped consecutively (e.g., 01, 10,0011, 1100, 000111, etc.).
The number of 0s in the substring is equal to the number of 1s in the substring


4. Mary is a famous shopkeeper who sells n items in her shop. She assigns each item a unique
popularity rating in the inclusive range from 1 to n.
The shop only has one shelf, so the items are displayed array-style in a single row
 spanning from left to right in a random order. She wants to rearrange the items on the shelf by
 decreasing popularity rating such that the rating for the i item is always greater than the popularity
 rating of the (i + 1) item. Mary can swap any two items, i and j, in a single operation.


100% is possible